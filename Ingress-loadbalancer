apiVersion: extensions/v1beta1
-----------------------------
kind: Ingress
metadata:
  annotations:
    field.cattle.io/ingressState: '{"d2ViYXBwLWluZy9kZWZhdWx0Ly8vLzMxOTkz":""}'
    field.cattle.io/publicEndpoints: '[{"addresses":["10.27.1.167"],"port":443,"protocol":"HTTPS","serviceName":"default:webapp-svc","ingressName":"default:webapp-ing","hostname":"jarvis.shoppersstop.net","path":"/","allNodes":false}]'
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"field.cattle.io/ingressState":"{\"d2ViYXBwLWluZy9kZWZhdWx0Ly8vLzMxOTkz\":\"\"}","field.cattle.io/publicEndpoints":"[{\"addresses\":[\"10.27.1.167\"],\"port\":80,\"protocol\":\"HTTP\",\"serviceName\":\"default:webapp-svc\",\"ingressName\":\"default:webapp-ing\",\"path\":\"/\",\"allNodes\":false},{\"addresses\":[\"10.27.1.167\"],\"port\":443,\"protocol\":\"HTTPS\",\"serviceName\":\"default:webapp-svc\",\"ingressName\":\"default:webapp-ing\",\"path\":\"/\",\"allNodes\":false}]"},"creationTimestamp":"2021-07-29T07:51:55Z","generation":9,"managedFields":[{"apiVersion":"extensions/v1beta1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{}}},"manager":"kubectl","operation":"Update","time":"2021-07-29T07:51:55Z"},{"apiVersion":"extensions/v1beta1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:field.cattle.io/ingressState":{},"f:field.cattle.io/publicEndpoints":{}}},"f:spec":{"f:rules":{}}},"manager":"rancher","operation":"Update","time":"2021-07-29T08:48:40Z"},{"apiVersion":"networking.k8s.io/v1beta1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:loadBalancer":{"f:ingress":{}}}},"manager":"nginx-ingress-controller","operation":"Update","time":"2021-08-06T12:37:41Z"},{"apiVersion":"extensions/v1beta1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{"f:kubectl.kubernetes.io/last-applied-configuration":{}}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2021-08-17T11:53:53Z"}],"name":"webapp-ing","namespace":"default","resourceVersion":"9362550","selfLink":"/apis/extensions/v1beta1/namespaces/default/ingresses/webapp-ing","uid":"ee7eee92-36cb-4f17-a1ea-4d486ca7deb7"},"spec":{"rules":[{"host":"jarvis.shoppersstop.net","http":{"paths":[{"backend":{"serviceName":"webapp-svc","servicePort":31993},"path":"/","pathType":"ImplementationSpecific"}]}}],"tls":[{"hosts":["jarvis.shoppersstop.net"],"secretName":"shoppers-tls"}]},"status":{"loadBalancer":{"ingress":[{"ip":"10.27.1.167"}]}}}
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
  creationTimestamp: "2021-07-29T07:51:55Z"
  generation: 10
  name: webapp-ing
  namespace: default
  resourceVersion: "35481084"
  selfLink: /apis/extensions/v1beta1/namespaces/default/ingresses/webapp-ing
  uid: ee7eee92-36cb-4f17-a1ea-4d486ca7deb7
spec:
  rules:
  - host: jarvis.shoppersstop.net
    http:
      paths:
      - backend:
          serviceName: webapp-svc
          servicePort: 31993
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - jarvis.shoppersstop.net
    secretName: shoppers-tls
status:
  loadBalancer:
    ingress:
    - ip: 10.27.1.167
--------------------------------------------
ClusterIP
---------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: webapp-svc
  namespace: default

spec:
  clusterIP: 172.20.10.207
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 31993
  selector:
    app: webapp-shared
  sessionAffinity: None
  type: ClusterIP

------------------------------------------------------
nginx-ingress-controller SVC LoadBalancer
------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress-controller
  namespace: default
spec:
  clusterIP: 172.20.51.173
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    nodePort: 30594
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    nodePort: 32013
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: nginx-ingress
    app.kubernetes.io/component: controller
    release: nginx-ingress
  sessionAffinity: None
  type: LoadBalancer


------------------------------------------------------
webapp-shared POD
------------------------------------------------------
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/psp: eks.privileged
  creationTimestamp: "2021-11-24T06:25:23Z"
  labels:
    app: webapp-shared
  name: webapp-shared
  namespace: default
  resourceVersion: "35457975"
  selfLink: /api/v1/namespaces/default/pods/webapp-shared
  uid: a992a61e-2009-405a-8f6e-00acbf13b07d
spec:
  containers:
  - image: xxxxxxxx.dkr.ecr.ap-south-1.amazonaws.com/shsgrdldaecr01:5
    imagePullPolicy: Always
    name: webapp-app
    ports:
    - containerPort: 31993
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /data1/AXIOM
      name: data1
    - mountPath: /Cache
      name: cache
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-6zh5v
      readOnly: true
  - image: xxxxxxxxxxxxxxxxxx.dkr.ecr.ap-south-1.amazonaws.com/shsgrdldaecr01:importengine-2.0
    imagePullPolicy: Always
    name: importengine
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /data1/AXIOM
      name: data1
    - mountPath: /Cache
      name: cache
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-6zh5v
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: ip-10-27-1-167.devshopzone.local
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: data1
    persistentVolumeClaim:
      claimName: aws-pvc-axiom
  - name: cache
    persistentVolumeClaim:
      claimName: aws-pvc-cache
  - name: default-token-6zh5v
    secret:
      defaultMode: 420
      secretName: default-token-6zh5v

